{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","App","props","sendMessageFunction","state","name","trim","length","message","emit","alert","clearChatFunction","setState","data","undefined","console","log","on","e","mdata","concat","off","className","id","this","map","value","type","placeholder","onChange","s","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAIMA,EAASC,IAAG,mDAkGHC,E,kDA/Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,oBAAsB,WAElB,EAAKC,MAAMC,KAAKC,OAAOC,OAAS,GAChC,EAAKH,MAAMI,QAAQF,OAAOC,OAAS,EAEnCR,EAAOU,KAAK,QAAS,CACnBJ,KAAM,EAAKD,MAAMC,KAAKC,OACtBE,QAAS,EAAKJ,MAAMI,QAAQF,SAG9BI,MAAM,oCAnBS,EAsBnBC,kBAAoB,WAClBZ,EAAOU,KAAK,SACZ,EAAKG,SAAS,CAAEC,KAAM,GAAIR,KAAM,GAAIG,QAAS,MAtB7C,EAAKJ,MAAQ,CACXC,KAAM,GACNQ,KAAM,GACNL,QAAS,IALM,E,qDA0BnB,WAAqB,IAAD,YACHM,IAAXf,IACFgB,QAAQC,IAAI,0BAGZjB,EAAOkB,GAAG,UAAU,SAACC,GACnB,IAAIC,EAAQ,EAAKf,MAAMS,KAAKO,OAAOF,GACnC,EAAKN,SAAS,CAAEC,KAAMM,IACtBJ,QAAQC,IAAI,EAAKZ,MAAMS,Y,kCAK7B,WACEd,EAAOsB,IAAI,Y,oBAGb,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKC,GAAG,UAAR,UACE,kDACA,qBAAKD,UAAU,WACf,sBAAKC,GAAG,OAAR,UACE,uBACA,qBAAKA,GAAG,WAAWD,UAAU,OAA7B,SACGE,KAAKpB,MAAMS,KAAKY,KAAI,SAACC,GAAD,OACnB,qBAAKH,GAAG,cAAcD,UAAU,aAAhC,SACGI,EAAMrB,KAAO,MAAQqB,EAAMlB,eAIlC,uBACA,uBACEmB,KAAK,OACLJ,GAAG,WACHD,UAAU,eACVM,YAAY,kBACZC,SAAU,SAACC,GACT,EAAKlB,SAAS,CAAEP,KAAMyB,EAAEC,OAAOL,WAGnC,uBACA,0BACEG,SAAU,SAACX,GAAD,OAAO,EAAKN,SAAS,CAAEJ,QAASU,EAAEa,OAAOL,SACnDH,GAAG,WACHD,UAAU,eACVM,YAAY,wBAGhB,wBACEN,UAAU,kBACVU,QAAS,kBAAM,EAAK7B,uBAFtB,kBAMA,wBACEoB,GAAG,QACHD,UAAU,iBACVU,QAAS,kBAAM,EAAKrB,qBAHtB,qC,GAnFQsB,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.317b80a4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"https://obscure-brushlands-31047.herokuapp.com/\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      data: [],\n      message: \"\",\n    };\n  }\n\n  sendMessageFunction = () => {\n    if (\n      this.state.name.trim().length > 0 &&\n      this.state.message.trim().length > 0\n    ) {\n      socket.emit(\"input\", {\n        name: this.state.name.trim(),\n        message: this.state.message.trim(),\n      });\n    } else {\n      alert(\"Please enter Message and Name !\");\n    }\n  };\n  clearChatFunction = () => {\n    socket.emit(\"clear\");\n    this.setState({ data: [], name: \"\", message: \"\" });\n  };\n  componentDidMount() {\n    if (socket !== undefined) {\n      console.log(\"Connected to socket...\");\n\n      // Handle Output\n      socket.on(\"output\", (e) => {\n        var mdata = this.state.data.concat(e);\n        this.setState({ data: mdata });\n        console.log(this.state.data);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    socket.off(\"output\");\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"content\">\n          <h1>WebSocket Client</h1>\n          <div className=\"status\"></div>\n          <div id=\"chat\">\n            <br />\n            <div id=\"messages\" className=\"card\">\n              {this.state.data.map((value) => (\n                <div id=\"textMessage\" className=\"card-block\">\n                  {value.name + \" : \" + value.message}\n                </div>\n              ))}\n            </div>\n            <br />\n            <input\n              type=\"text\"\n              id=\"username\"\n              className=\"form-control\"\n              placeholder=\"Enter Your name\"\n              onChange={(s) => {\n                this.setState({ name: s.target.value });\n              }}\n            />\n            <br />\n            <textarea\n              onChange={(e) => this.setState({ message: e.target.value })}\n              id=\"textarea\"\n              className=\"form-control\"\n              placeholder=\"Enter message...\"\n            />\n          </div>\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.sendMessageFunction()}\n          >\n            Send\n          </button>\n          <button\n            id=\"clear\"\n            className=\"btn btn-danger\"\n            onClick={() => this.clearChatFunction()}\n          >\n            Clear Messages\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}